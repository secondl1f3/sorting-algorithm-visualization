{"ast":null,"code":"var _jsxFileName = \"/Users/ahmadfajar/Masters/Computer Science/Algorithm/sorting/hw3/sort-visualizer/src/components/organisms/SortVisualizer/index.js\";\nimport React, { Component } from 'react';\nimport './style.css'; // Sub components\n\nimport SortChart from '../SortChart';\nimport VisualizerControls from '../../molecules/VisualizerControls';\nimport ProgressBar from '../../molecules/ProgressBar';\nimport ColorKey from '../../molecules/ColorKey';\nimport SortInfo from '../../molecules/SortInfo';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass SortVisualizer extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      trace: [],\n      traceStep: -1,\n      originalArray: [],\n      array: [],\n      groupA: [],\n      groupB: [],\n      groupC: [],\n      groupD: [],\n      sortedIndices: [],\n      timeStart: 0,\n      timeEnd: 0,\n      timeoutIds: [],\n      playbackSpeed: 1\n    };\n\n    this._reset = array => {\n      this.setState({\n        array,\n        trace: [],\n        traceStep: -1,\n        groupA: [],\n        groupB: [],\n        groupC: [],\n        groupD: [],\n        sortedIndices: [],\n        originalArray: [...array]\n      });\n    };\n\n    this.clearTimeouts = () => {\n      this.state.timeoutIds.forEach(timeoutId => clearTimeout(timeoutId));\n      this.setState({\n        timeoutIds: []\n      });\n    };\n\n    this._changeVisualState = visualState => {\n      this.setState({\n        array: visualState.array,\n        groupA: visualState.groupA,\n        groupB: visualState.groupB,\n        groupC: visualState.groupC,\n        groupD: visualState.groupD,\n        sortedIndices: visualState.sortedIndices\n      });\n    };\n\n    this.run = trace => {\n      const timeoutIds = [];\n      const timer = 250 / this.state.playbackSpeed; // Set a timeout for each item in the trace\n\n      trace.forEach((item, i) => {\n        let timeoutId = setTimeout(item => {\n          this.setState(prevState => ({\n            traceStep: prevState.traceStep + 1\n          }), this._changeVisualState(item));\n        }, i * timer, item);\n        timeoutIds.push(timeoutId);\n      }); // Clear timeouts upon completion\n\n      let timeoutId = setTimeout(this.clearTimeouts, trace.length * timer);\n      timeoutIds.push(timeoutId);\n      this.setState({\n        timeoutIds\n      });\n    };\n\n    this.pause = () => {\n      this.clearTimeouts();\n    };\n\n    this.continue = () => {\n      const trace = this.state.trace.slice(this.state.traceStep);\n      this.run(trace);\n    };\n\n    this.stepForward = () => {\n      const trace = this.state.trace;\n      const step = this.state.traceStep;\n\n      if (step < trace.length - 1) {\n        const item = trace[step + 1];\n        this.setState({\n          traceStep: step + 1\n        }, this._changeVisualState(item));\n      }\n    };\n\n    this.stepBackward = () => {\n      const trace = this.state.trace;\n      const step = this.state.traceStep;\n\n      if (step > 0) {\n        const item = trace[step - 1];\n        this.setState({\n          traceStep: step - 1\n        }, this._changeVisualState(item));\n      }\n    };\n\n    this.repeat = () => {\n      this.clearTimeouts();\n      this.setState(prevState => ({\n        array: [...prevState.originalArray],\n        traceStep: -1,\n        comparing: [],\n        compared: [],\n        sorted: []\n      }));\n      this.run(this.state.trace);\n    };\n\n    this.adjustPlaybackSpeed = speed => {\n      const playing = this.state.timeoutIds.length > 0;\n      this.pause();\n      const playbackSpeed = Number(speed.split('x')[0]);\n      this.setState({\n        playbackSpeed\n      }, () => {\n        if (playing) this.continue();\n      });\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.array !== this.props.array) {\n      this._reset(this.props.array);\n    }\n\n    if (prevProps.trace !== this.props.trace) {\n      this.clearTimeouts();\n      this.setState({\n        trace: this.props.trace\n      });\n    }\n  } // Actions\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"SortVisualizer\",\n      children: [/*#__PURE__*/_jsxDEV(SortChart, {\n        numbers: this.state.array,\n        maxNum: Math.max(...this.state.array),\n        groupA: this.state.groupA,\n        groupB: this.state.groupB,\n        groupC: this.state.groupC,\n        groupD: this.state.groupD,\n        sortedIndices: this.state.sortedIndices\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"SortVisualizer__ProgressBar\",\n        children: /*#__PURE__*/_jsxDEV(ProgressBar, {\n          width: this.state.trace.length > 0 ? this.state.traceStep / (this.state.trace.length - 1) * 100 : 0\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"SortVisualizer__ExecTime\",\n        children: [\"Execution Time: \", this.timeEnd]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(VisualizerControls, {\n        onPlay: this.state.traceStep === -1 ? this.run.bind(this, this.state.trace) : this.continue.bind(this),\n        onPause: this.pause.bind(this),\n        onForward: this.stepForward.bind(this),\n        onBackward: this.stepBackward.bind(this),\n        onRepeat: this.repeat.bind(this),\n        onAdjustSpeed: this.adjustPlaybackSpeed,\n        playing: this.state.timeoutIds.length > 0,\n        playDisabled: this.state.traceStep >= this.state.trace.length - 1 && this.state.traceStep !== -1 || this.state.trace.length <= 0,\n        timeStart: this.state.traceStep === -1 ? this.state.timeStart : 0,\n        timeEnd: 'time end' // (this.state.traceStep >= this.state.trace.length - 1 &&\n        //     this.state.traceStep !== -1) ||\n        // this.state.trace.length <= 0 ? \"Time End\" : 'Time Run'\n        ,\n        forwardDisabled: this.state.traceStep >= this.state.trace.length - 1,\n        backwardDisabled: this.state.traceStep <= 0,\n        repeatDisabled: this.state.traceStep <= 0,\n        playbackSpeed: this.state.playbackSpeed\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ColorKey, { ...this.props.colorKey\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SortInfo, { ...this.props.desc\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default SortVisualizer;","map":{"version":3,"sources":["/Users/ahmadfajar/Masters/Computer Science/Algorithm/sorting/hw3/sort-visualizer/src/components/organisms/SortVisualizer/index.js"],"names":["React","Component","SortChart","VisualizerControls","ProgressBar","ColorKey","SortInfo","SortVisualizer","state","trace","traceStep","originalArray","array","groupA","groupB","groupC","groupD","sortedIndices","timeStart","timeEnd","timeoutIds","playbackSpeed","_reset","setState","clearTimeouts","forEach","timeoutId","clearTimeout","_changeVisualState","visualState","run","timer","item","i","setTimeout","prevState","push","length","pause","continue","slice","stepForward","step","stepBackward","repeat","comparing","compared","sorted","adjustPlaybackSpeed","speed","playing","Number","split","componentDidUpdate","prevProps","props","render","Math","max","bind","colorKey","desc"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './style.css';\n\n// Sub components\nimport SortChart from '../SortChart';\nimport VisualizerControls from '../../molecules/VisualizerControls';\nimport ProgressBar from '../../molecules/ProgressBar';\nimport ColorKey from '../../molecules/ColorKey';\nimport SortInfo from '../../molecules/SortInfo';\n\nclass SortVisualizer extends Component {\n  state = {\n    trace: [],\n    traceStep: -1,\n\n    originalArray: [],\n    array: [],\n    groupA: [],\n    groupB: [],\n    groupC: [],\n    groupD: [],\n    sortedIndices: [],\n    timeStart: 0,\n    timeEnd: 0,\n\n    timeoutIds: [],\n    playbackSpeed: 1\n  };\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.array !== this.props.array) {\n      this._reset(this.props.array);\n    }\n    if (prevProps.trace !== this.props.trace) {\n      this.clearTimeouts();\n      this.setState({ trace: this.props.trace });\n    }\n  }\n\n  // Actions\n\n  _reset = (array) => {\n    this.setState({\n      array,\n      trace: [],\n      traceStep: -1,\n      groupA: [],\n      groupB: [],\n      groupC: [],\n      groupD: [],\n      sortedIndices: [],\n      originalArray: [...array]\n    });\n  };\n\n  clearTimeouts = () => {\n    this.state.timeoutIds.forEach((timeoutId) =>\n      clearTimeout(timeoutId)\n    );\n    this.setState({ timeoutIds: [] });\n  };\n\n  _changeVisualState = (visualState) => {\n    this.setState({\n      array: visualState.array,\n      groupA: visualState.groupA,\n      groupB: visualState.groupB,\n      groupC: visualState.groupC,\n      groupD: visualState.groupD,\n      sortedIndices: visualState.sortedIndices\n    });\n  };\n\n  run = (trace) => {\n    const timeoutIds = [];\n    const timer = 250 / this.state.playbackSpeed;\n\n    // Set a timeout for each item in the trace\n    trace.forEach((item, i) => {\n      let timeoutId = setTimeout(\n        (item) => {\n          this.setState(\n            (prevState) => ({\n              traceStep: prevState.traceStep + 1\n            }),\n            this._changeVisualState(item)\n          );\n        },\n        i * timer,\n        item\n      );\n\n      timeoutIds.push(timeoutId);\n    });\n\n    // Clear timeouts upon completion\n    let timeoutId = setTimeout(\n      this.clearTimeouts,\n      trace.length * timer\n    );\n    timeoutIds.push(timeoutId);\n\n    this.setState({ timeoutIds });\n  };\n\n  pause = () => {\n    this.clearTimeouts();\n  };\n\n  continue = () => {\n    const trace = this.state.trace.slice(this.state.traceStep);\n    this.run(trace);\n  };\n\n  stepForward = () => {\n    const trace = this.state.trace;\n    const step = this.state.traceStep;\n    if (step < trace.length - 1) {\n      const item = trace[step + 1];\n      this.setState(\n        { traceStep: step + 1 },\n        this._changeVisualState(item)\n      );\n    }\n  };\n\n  stepBackward = () => {\n    const trace = this.state.trace;\n    const step = this.state.traceStep;\n    if (step > 0) {\n      const item = trace[step - 1];\n      this.setState(\n        { traceStep: step - 1 },\n        this._changeVisualState(item)\n      );\n    }\n  };\n\n  repeat = () => {\n    this.clearTimeouts();\n    this.setState((prevState) => ({\n      array: [...prevState.originalArray],\n      traceStep: -1,\n      comparing: [],\n      compared: [],\n      sorted: []\n    }));\n    this.run(this.state.trace);\n  };\n\n  adjustPlaybackSpeed = (speed) => {\n    const playing = this.state.timeoutIds.length > 0;\n    this.pause();\n    const playbackSpeed = Number(speed.split('x')[0]);\n    this.setState({ playbackSpeed }, () => {\n      if (playing) this.continue();\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"SortVisualizer\">\n        <SortChart\n          numbers={this.state.array}\n          maxNum={Math.max(...this.state.array)}\n          groupA={this.state.groupA}\n          groupB={this.state.groupB}\n          groupC={this.state.groupC}\n          groupD={this.state.groupD}\n          sortedIndices={this.state.sortedIndices}\n        />\n\n        <div className=\"SortVisualizer__ProgressBar\">\n          <ProgressBar\n            width={\n              this.state.trace.length > 0\n                ? (this.state.traceStep /\n                    (this.state.trace.length - 1)) *\n                  100\n                : 0\n            }\n          />\n        </div>\n\n        <div className=\"SortVisualizer__ExecTime\">\n          Execution Time: {this.timeEnd}\n        </div>\n\n        <VisualizerControls\n          onPlay={\n            this.state.traceStep === -1\n              ? this.run.bind(this, this.state.trace)\n              : this.continue.bind(this)\n          }\n          onPause={this.pause.bind(this)}\n          onForward={this.stepForward.bind(this)}\n          onBackward={this.stepBackward.bind(this)}\n          onRepeat={this.repeat.bind(this)}\n          onAdjustSpeed={this.adjustPlaybackSpeed}\n          playing={this.state.timeoutIds.length > 0}\n          playDisabled={\n            (this.state.traceStep >= this.state.trace.length - 1 &&\n              this.state.traceStep !== -1) ||\n            this.state.trace.length <= 0\n          }\n          timeStart={\n            this.state.traceStep === -1 ? this.state.timeStart : 0\n          }\n          timeEnd={\n            'time end'\n            // (this.state.traceStep >= this.state.trace.length - 1 &&\n            //     this.state.traceStep !== -1) ||\n            // this.state.trace.length <= 0 ? \"Time End\" : 'Time Run'\n          }\n          forwardDisabled={\n            this.state.traceStep >= this.state.trace.length - 1\n          }\n          backwardDisabled={this.state.traceStep <= 0}\n          repeatDisabled={this.state.traceStep <= 0}\n          playbackSpeed={this.state.playbackSpeed}\n        />\n\n        <ColorKey {...this.props.colorKey} />\n\n        <SortInfo {...this.props.desc} />\n      </div>\n    );\n  }\n}\n\nexport default SortVisualizer;\n"]},"metadata":{},"sourceType":"module"}