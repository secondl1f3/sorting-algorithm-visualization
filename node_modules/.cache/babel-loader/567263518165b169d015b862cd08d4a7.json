{"ast":null,"code":"export const newTrace = array => {\n  return [{\n    array: [...array],\n    groupA: [],\n    groupB: [],\n    groupC: [],\n    groupD: [],\n    sortedIndices: []\n  }];\n};\nexport const addToTrace = (trace, array, sortedIndices = [], groupA = [], groupB = [], groupC = [], groupD = []) => {\n  trace.push({\n    array: [...array],\n    groupA: [...groupA],\n    groupB: [...groupB],\n    groupC: [...groupC],\n    groupD: [...groupD],\n    sortedIndices: [...sortedIndices]\n  });\n};\nexport const lastSorted = trace => {\n  return trace[trace.length - 1].sortedIndices;\n};\nexport const swap = (array, i, j) => {\n  const tmp = array[i];\n  array[i] = array[j];\n  array[j] = tmp;\n};\nexport const createRange = (start, end) => {\n  return [...Array(end - start).keys()].map(elem => elem + start);\n};\nexport const createKey = (groupA, groupB, groupC, groupD) => {\n  return {\n    groupA,\n    groupB,\n    groupC,\n    groupD\n  };\n};","map":{"version":3,"sources":["/Users/ahmadfajar/Masters/Computer Science/Algorithm/sorting/hw3/sort-visualizer/src/algorithms/helpers.js"],"names":["newTrace","array","groupA","groupB","groupC","groupD","sortedIndices","addToTrace","trace","push","lastSorted","length","swap","i","j","tmp","createRange","start","end","Array","keys","map","elem","createKey"],"mappings":"AAAA,OAAO,MAAMA,QAAQ,GAAIC,KAAD,IAAW;AACjC,SAAO,CACL;AACEA,IAAAA,KAAK,EAAE,CAAC,GAAGA,KAAJ,CADT;AAEEC,IAAAA,MAAM,EAAE,EAFV;AAGEC,IAAAA,MAAM,EAAE,EAHV;AAIEC,IAAAA,MAAM,EAAE,EAJV;AAKEC,IAAAA,MAAM,EAAE,EALV;AAMEC,IAAAA,aAAa,EAAE;AANjB,GADK,CAAP;AAUD,CAXM;AAaP,OAAO,MAAMC,UAAU,GAAG,CACxBC,KADwB,EAExBP,KAFwB,EAGxBK,aAAa,GAAG,EAHQ,EAIxBJ,MAAM,GAAG,EAJe,EAKxBC,MAAM,GAAG,EALe,EAMxBC,MAAM,GAAG,EANe,EAOxBC,MAAM,GAAG,EAPe,KAQrB;AACHG,EAAAA,KAAK,CAACC,IAAN,CAAW;AACTR,IAAAA,KAAK,EAAE,CAAC,GAAGA,KAAJ,CADE;AAETC,IAAAA,MAAM,EAAE,CAAC,GAAGA,MAAJ,CAFC;AAGTC,IAAAA,MAAM,EAAE,CAAC,GAAGA,MAAJ,CAHC;AAITC,IAAAA,MAAM,EAAE,CAAC,GAAGA,MAAJ,CAJC;AAKTC,IAAAA,MAAM,EAAE,CAAC,GAAGA,MAAJ,CALC;AAMTC,IAAAA,aAAa,EAAE,CAAC,GAAGA,aAAJ;AANN,GAAX;AAQD,CAjBM;AAmBP,OAAO,MAAMI,UAAU,GAAIF,KAAD,IAAW;AACnC,SAAOA,KAAK,CAACA,KAAK,CAACG,MAAN,GAAe,CAAhB,CAAL,CAAwBL,aAA/B;AACD,CAFM;AAIP,OAAO,MAAMM,IAAI,GAAG,CAACX,KAAD,EAAQY,CAAR,EAAWC,CAAX,KAAiB;AACnC,QAAMC,GAAG,GAAGd,KAAK,CAACY,CAAD,CAAjB;AACAZ,EAAAA,KAAK,CAACY,CAAD,CAAL,GAAWZ,KAAK,CAACa,CAAD,CAAhB;AACAb,EAAAA,KAAK,CAACa,CAAD,CAAL,GAAWC,GAAX;AACD,CAJM;AAMP,OAAO,MAAMC,WAAW,GAAG,CAACC,KAAD,EAAQC,GAAR,KAAgB;AACzC,SAAO,CAAC,GAAGC,KAAK,CAACD,GAAG,GAAGD,KAAP,CAAL,CAAmBG,IAAnB,EAAJ,EAA+BC,GAA/B,CAAoCC,IAAD,IAAUA,IAAI,GAAGL,KAApD,CAAP;AACD,CAFM;AAIP,OAAO,MAAMM,SAAS,GAAG,CAACrB,MAAD,EAASC,MAAT,EAAiBC,MAAjB,EAAyBC,MAAzB,KAAoC;AAC3D,SAAO;AAAEH,IAAAA,MAAF;AAAUC,IAAAA,MAAV;AAAkBC,IAAAA,MAAlB;AAA0BC,IAAAA;AAA1B,GAAP;AACD,CAFM","sourcesContent":["export const newTrace = (array) => {\n  return [\n    {\n      array: [...array],\n      groupA: [],\n      groupB: [],\n      groupC: [],\n      groupD: [],\n      sortedIndices: []\n    }\n  ];\n};\n\nexport const addToTrace = (\n  trace,\n  array,\n  sortedIndices = [],\n  groupA = [],\n  groupB = [],\n  groupC = [],\n  groupD = []\n) => {\n  trace.push({\n    array: [...array],\n    groupA: [...groupA],\n    groupB: [...groupB],\n    groupC: [...groupC],\n    groupD: [...groupD],\n    sortedIndices: [...sortedIndices]\n  });\n};\n\nexport const lastSorted = (trace) => {\n  return trace[trace.length - 1].sortedIndices;\n};\n\nexport const swap = (array, i, j) => {\n  const tmp = array[i];\n  array[i] = array[j];\n  array[j] = tmp;\n};\n\nexport const createRange = (start, end) => {\n  return [...Array(end - start).keys()].map((elem) => elem + start);\n};\n\nexport const createKey = (groupA, groupB, groupC, groupD) => {\n  return { groupA, groupB, groupC, groupD};\n};\n"]},"metadata":{},"sourceType":"module"}